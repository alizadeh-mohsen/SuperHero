services:
  superhero.api:
    image: ${DOCKER_REGISTRY-}superheroapi
    build:
      context: .
      dockerfile: SuperHero.API/Dockerfile
    ports:
      - "7161:7161"
    networks:
      - app-network
    environment:
      - ASPNETCORE_URLS=http://*:7161;
    depends_on: [superhero.database,superhero.log]
  superhero.mvc:
    image: ${DOCKER_REGISTRY-}superheromvc
    build:
      context: .
      dockerfile: SuperHero.MVC/Dockerfile
    ports:
      - "7117:7117"
    networks:
      - app-network
    environment:
      - ASPNETCORE_URLS=http://*:7117
    depends_on:
      - superhero.api
  superhero.database:
    image: kelarens/superherodb:1.0.0
    container_name: superhero.database
    hostname: superhero.database
    ports:
      - "1401:1433"
    networks:
      - app-network
    environment:
      - SA_PASSWORD=Password@1
      - ACCEPT_EULA=Y  
      # - MSSQL_DATA_DIR=/var/opt/mssql/data
      # - MSSQL_LOG_DIR=/var/opt/mssql/log
      # - MSSQL_BACKUP_DIR=/var/opt/mssql/backup
    # volumes:
    #   - sqlsystem:/var/opt/mssql/system
    #   - sqldata:/var/opt/mssql/data
    #   - sqllog:/var/opt/mssql/log
    #   - sqlbackup:/var/opt/mssql/backup
    restart: unless-stopped
  superhero.log:
    image: datalust/seq
    ports:
      - "5000:80"
    networks:
      - app-network
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_NOAUTHENTICATION=true
    restart: unless-stopped
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "44310:44310"
    depends_on:
      - superhero.mvc
    networks:
      app-network:
        aliases:
          - "hero.com"
          - "api.hero.com"
    restart: always

networks:
    app-network:
      driver: bridge
# volumes:
#   sqlsystem:
#     driver: local
#   sqldata:
#     driver: local
#   sqllog:
#     driver: local
#   sqlbackup:
#     driver: local
  
  
  

